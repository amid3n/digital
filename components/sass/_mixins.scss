// Functions
@function em($value, $base: 16px) {
  @return ($value / $base) * 1em;
}

@function rem($value, $base: 16px) {
  @return ($value / $base) * 1rem;
}

@function col-width ($columns: 12, $page-width: 100%, $gap: 1%) {
  @return ($page-width - $gap * ($columns - 1)) / $columns;
}

// Mixins
@mixin break( $args... ) {
  @if length($args) == 1 {
    @media (min-width: nth($args, 1)) {
      @content;
    }
  } @else {
    @media (min-width: nth($args, 1)) and (max-width: nth($args, 2)) {
      @content;
    }
  }
}

@mixin gradientBlock($bgColor: black, $fontColor: white) {
  @include background-image(linear_gradient(to bottom right, $bgColor,  lighten($bgColor, 10%) 60%, $bgColor));

  &__title {
    color:  $fontColor;
  }

  &__text {
    color: transparentize($fontColor, .25);

    strong {
      color: $fontColor;
    }
  }
}

@mixin mediaButtons($fontSize: 20px, $color: white, $hoverColor: black) {
  list-style: none;
  text-align: center;
  font-size: em($fontSize);
  //padding: 0 0 0 .8em;
  margin: .8em 0 0;

  &__item {
    display: inline-block;
    margin: .3em;

    &:last-of-type {
      margin-right: 0;
    }
  }

  &__link {
    display: block;
    padding: .5em;
    border: 2px solid $color;
    @include border-radius(50%);
    @include transition();

    &:hover {
      border-color: $hoverColor;
      @include single-box-shadow(1px, 1px, 3px, transparentize($hoverColor, .5));
    }
  }
}